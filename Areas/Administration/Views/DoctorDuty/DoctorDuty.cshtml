@model HMS.Models.ViewModels.Administration.DoctorDutyViewModel

@{
    ViewData["Title"] = "DoctorDuty";
    Layout = "~/Views/Shared/_HMSMainLayout.cshtml";
}

@{
    <style>

        .drDutyAssignRow .form-group {
            margin-bottom: 0;
        }

        .dayOfWeekLabel {
            margin-bottom: 1rem;
            font-size:10px;
            vertical-align: sub;
        }

        .cusRow div label {
            padding: 5px 9px 0px 9px;
        }

        .input-group-btn .btn {
            padding-top: 2px;
            padding-bottom: 2px;
        }

        select.form-control:not([size]):not([multiple]) {
            height: 30px;
        }

        .card-header {
            background-color: transparent;
            border-top: none;
        }

        #btnSelectDoctor, .btnRemove {
            padding: 4px !important;
        }

        .timePicker {
            padding: 2px;
            font-size: smaller;
        }

        .txtDoctorName, .txtDepartmentName, .txtUnitName, .ddlTimeGap {
            font-size: smaller;
        }

        .drDutyCardHeader{
            margin:0;
            padding:0;
        }

        div.drDutyCardHeader h5 {
            color: darkorange;
        }

        .btnUpdateSubmitToggle {
            display: @(Model.DrDeptUnit.DoctorId == 0 ? "none" : "")
        }
        .btnSaveSubmitToggle{
            display: @(Model.DrDeptUnit.DoctorId == 0 ? "" : "none")
        }

        body.enlarged{
            min-height:unset;
        }



    </style>
}

@{
    var oldDept = "";
    var oldDoctorName = "";
    var oldUnitName = "";
}

@section CurrentPageNavigation{
    <h4 class="page-title float-left">Administration</h4>

    <ol class="breadcrumb float-right">
        <li class="breadcrumb-item"><a href="#">Doctor Duty</a></li>
        @*<li class="breadcrumb-item"><a href="#">Register</a></li>*@
    </ol>
}

@section LeftSideMenu{
    <partial name="_AdministrationLeftSideMenuPartial" />
}

@{
    string FormatDutyTimeString(DateTime? inputDateTime)
    {
        return inputDateTime.HasValue ? inputDateTime.Value.ToString("h:mm tt") : "";
    }
}

<div class="row">
    <div class="col-sm-12 col-md-5">
        <div class="row separateScrollFullHeight">
            <div class="card-box col-12">
                <form method="post" id="#formDrDuty">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row cusRow">
                        <div class="col-3">
                            <div class="row">
                                <label>Consultant</label>

                            </div>
                            <div class="row">

                                <div class="input-group align-bottom col-12">
                                    <input asp-for="DrDeptUnit.DoctorName" type="text" class="form-control input-sm rounded-0 txtDoctorName resetInputValue" placeholder="Consultant" readonly>
                                    <span class="input-group-btn">
                                        <button class="btn btn-outline-secondary rounded-0" data-toggle="modal" data-target="#modalView"
                                                type="button" id="btnSelectDoctor">
                                            <i class="fa fa-info-circle fa-sm"></i>
                                        </button>
                                    </span>
                                    @*<span class="input-group-btn">
                                            <button class="btn btn-outline-danger rounded-0"
                                                    type="button" id="btnClearDoctor">
                                                <i class="fa fa-times-circle fa-sm"></i>
                                            </button>
                                        </span>*@
                                </div>
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="row">
                                <label>Department</label>

                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <input type="text" asp-for="DrDeptUnit.DepartmentName" class="form-control input-sm txtDepartmentName resetInputValue" readonly />
                                </div>

                            </div>
                        </div>

                        <div class="col-3">
                            <div class="row">
                                <label>Unit</label>

                            </div>
                            <div class="row">
                                <div class="col-12">
                                    <input type="text" asp-for="DrDeptUnit.UnitName" class="form-control input-sm txtUnitName resetInputValue" readonly />
                                </div>
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="row">
                                <label>Time Gap</label>

                            </div>
                            <div class="row">

                                <div class="col-12">
                                    <select asp-for="TimeGap" class="form-control input-sm ddlTimeGap">
                                        @for (int i = 5; i <= 45; i += 5)
                                        {
                                            <option value="@i">
                                                @i mins
                                            </option>
                                        }
                                    </select>
                                </div>
                            </div>

                        </div>
                    </div>
                    <hr />

                    <partial name="_DrDeptUnitPartial" for="@Model.DrDeptUnit" view-data="ViewData" />

                    <div class="row mt-3">
                        <div class="col-1 chkDiv">
                            <label></label>
                        </div>
                        <div class="col-2" style="text-decoration:underline; text-align:center; vertical-align:middle;">
                            <label>Day Of Week</label>
                        </div>
                        <div class="col-9">
                            <div class="row">
                                <div class="col-3" style="text-decoration:underline; text-align:center;">
                                    <label style="margin-bottom:0;">Start</label><br /><label>Time1</label>
                                </div>
                                <div class="col-3" style="text-decoration:underline; text-align:center;">
                                    <label style="margin-bottom:0;">End</label><br /><label>Time1</label>
                                </div>
                                <div class="col-3" style="text-decoration:underline; text-align:center;">
                                    <label style="margin-bottom:0;">Start</label><br /><label>Time2</label>
                                </div>
                                <div class="col-3" style="text-decoration:underline; text-align:center;">
                                    <label style="margin-bottom:0;">End</label><br /><label>Time2</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    @for (int i = 0; i < Model.DayOfWeek.Count; i++)
                    {
                        string StartTime1 = FormatDutyTimeString(Model.NeededData[i].DutyStartTime1);
                        string EndTime1 = FormatDutyTimeString(Model.NeededData[i].DutyEndTime1);
                        string StartTime2 = FormatDutyTimeString(Model.NeededData[i].DutyStartTime2);
                        string EndTime2 = FormatDutyTimeString(Model.NeededData[i].DutyEndTime2);
                        bool isCheck = Model.NeededData[i].IsChecked;
                        string displayTimeBlock = isCheck ? "" : "none";

                        <div class="row drDutyAssignRow">
                            <div class="form-group col-1 chkDiv" style="text-align:right;">
                                <input style="vertical-align:middle;" class="chkChoose" type="checkbox" asp-for="NeededData[i].IsChecked" />
                            </div>
                            <div class="form-group col-2" style="text-align:center; vertical-align:middle;">
                                <label style="font-weight:normal;" class="dayOfWeekLabel" asp-for="NeededData[i].IsChecked">@Model.DayOfWeek[i]</label>
                                <input hidden asp-for="NeededData[i].DutyDay" class="dayOfDuty" />
                            </div>
                            <div class="ToggleTimePickerGroup col-9" style="display: @displayTimeBlock;">
                                <div class="row">
                                    <div class="form-group col-3">
                                        <div class="input-group">
                                            <input type="text" class="timePicker form-control input-sm resetInputValue startTimeOne" asp-for="NeededData[i].DutyStartTime1" value="@StartTime1" readonly>
                                            <span class="input-group-btn">
                                                <button class="btn btn-outline-danger rounded-0 btnRemove" type="button">
                                                    <i class="fa fa-times"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                    <div class="form-group col-3">
                                        <div class="input-group">
                                            <input type="text" class="timePicker form-control input-sm resetInputValue endTimeOne" asp-for="NeededData[i].DutyEndTime1" value="@EndTime1" readonly>
                                            <span class="input-group-btn">
                                                <button class="btn btn-outline-danger rounded-0 btnRemove" type="button">
                                                    <i class="fa fa-times"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                    <div class="form-group col-3">
                                        <div class="input-group">
                                            <input type="text" class="timePicker form-control input-sm resetInputValue startTimeTwo" asp-for="NeededData[i].DutyStartTime2" value="@StartTime2" readonly>
                                            <span class="input-group-btn">
                                                <button class="btn btn-outline-danger rounded-0 btnRemove" type="button">
                                                    <i class="fa fa-times"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                    <div class="form-group col-3">
                                        <div class="input-group">
                                            <input type="text" class="timePicker form-control input-sm resetInputValue endTimeTwo" asp-for="NeededData[i].DutyEndTime2" value="@EndTime2" readonly>
                                            <span class="input-group-btn">
                                                <button class="btn btn-outline-danger rounded-0 btnRemove" type="button">
                                                    <i class="fa fa-times"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="form-group row mt-3">
                        <div class="col-12">
                            <button type="submit" name="btnSubmit" class="btn btn-success btnSaveSubmitToggle" value="Create">Save</button>
                            <button type="submit" name="btnSubmit" class="btn btn-success btnUpdateSubmitToggle" value="Update">Update</button>
                            <button type="button" onclick="ResetDrDutyForm();" class="btn btn-secondary">Cancel</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-md-7">
        <div class="row separateScrollFullHeight">
            <div class="col-12">
                @if (Model.DoctorDutyList.Any() && (await authorizationService.AuthorizeAsync(User, "DoctorDutyView")).Succeeded)
                {
                    @foreach (var dpGroup in Model.DoctorDutyList)
                    {
                        var drDuty = dpGroup.DoctorDuties.FirstOrDefault();
                        var drDutyJsonData = Newtonsoft.Json.JsonConvert.SerializeObject(new
                        {
                            doctorId = drDuty.DoctorId.ToString(),
                            doctorName = drDuty.DoctorInfo.DoctorName,
                            departmentId = drDuty.DepartmentId.ToString(),
                            departmentName = drDuty.Department.DepartmentName,
                            unitId = drDuty.UnitId.ToString(),
                            unitName = drDuty.Unit.UnitName,
                            timeGap = drDuty.IntervalGapForPatient.ToString(),
                            drDutyInfo = dpGroup.DoctorDuties.Select(x => new
                            {
                                dutyDay = x.DutyDay,
                                dutyStartTime1 = FormatDutyTimeString(x.DutyStartTime1),
                                dutyEndTime1 = FormatDutyTimeString(x.DutyEndTime1),
                                dutyStartTime2 = FormatDutyTimeString(x.DutyStartTime2),
                                dutyEndTime2 = FormatDutyTimeString(x.DutyEndTime2),
                            }).ToList(),
                        });

                        @if (dpGroup.DepartmentName != oldDept)
                        {
                            <div class="">
                                <div class="my-2" style="text-align:center; text-decoration:underline;">
                                    <h3 class="">@dpGroup.DepartmentName Department</h3>
                                </div>
                            </div>
                            oldDept = dpGroup.DepartmentName;
                        }

                        <div class="card mt-2" style="width:100%;">

                            <div class="card-header">
                                <div class="row">
                                    <div class="col-2 drDutyCardHeader">
                                        <h5>Doctor Name</h5>
                                    </div>
                                    <div class="col-2 drDutyCardHeader">
                                        <h5>Days of Week</h5>
                                    </div>
                                    <div class="col-2 drDutyCardHeader">
                                        <h5>Unit</h5>
                                    </div>
                                    <div class="col-6">
                                        <div class="row">
                                            <div class="col-6 drDutyCardHeader">
                                                <h5>Duty Assign One</h5>
                                            </div>
                                            @*<div class="col-3 drDutyCardHeader">
                                                    <h5>End Time</h5>
                                                </div>
                                                <div class="col-3 drDutyCardHeader">
                                                    <h5>Start Time</h5>
                                                </div>*@
                                            <div class="col-6 drDutyCardHeader">
                                                <h5>Duty Assign Two</h5>
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>

                            <div class="card-body">
                                @foreach (var item in dpGroup.DoctorDuties)
                                {
                                    <div class="row">
                                        <div class="col-2" style="text-align:center; vertical-align:middle; font-weight:500;">
                                            @if (!(item.Unit.UnitName == oldUnitName && item.DoctorInfo.DoctorName == oldDoctorName))
                                            {
                                                @item.DoctorInfo.DoctorName

                                            }
                                        </div>
                                        <div class="col-2">
                                            @item.DutyDay
                                        </div>
                                        <div class="col-2" style="text-align:left; vertical-align:middle; font-weight:500;">
                                            @*@item.Unit.Name*@
                                            @if (!(item.Unit.UnitName == oldUnitName && item.DoctorInfo.DoctorName == oldDoctorName))
                                            {
                                                @item.Unit.UnitName

                                                oldUnitName = item.Unit.UnitName;
                                                oldDoctorName = item.DoctorInfo.DoctorName;
                                            }
                                        </div>
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-3">
                                                    @(FormatDutyTimeString(item.DutyStartTime1))
                                                </div>
                                                <div class="col-3">
                                                    @(FormatDutyTimeString(item.DutyEndTime1))
                                                </div>
                                                <div class="col-3">
                                                    @(FormatDutyTimeString(item.DutyStartTime2))
                                                </div>
                                                <div class="col-3">
                                                    @(FormatDutyTimeString(item.DutyEndTime2))
                                                </div>
                                            </div>
                                        </div>

                                    </div>

                                }
                            </div>
                            @if ((await authorizationService.AuthorizeAsync(User, "DoctorDutyUpdate")).Succeeded
                 || (await authorizationService.AuthorizeAsync(User, "DoctorDutyDelete")).Succeeded)
                            {
                                <div class="card-footer">
                                    <div class="row">
                                        <div class="col-5">
                                            @if ((await authorizationService.AuthorizeAsync(User, "DoctorDutyUpdate")).Succeeded)
                                            {
                                                <button type="button" class="btn btn-outline-primary" onclick="DrDutyEditClick(@drDutyJsonData)">
                                                    <i class="fa fa-edit"></i>
                                                </button>
                                            }
                                            @if ((await authorizationService.AuthorizeAsync(User, "DoctorDutyDelete")).Succeeded)
                                            {
                                                var toDelDrId = dpGroup.DoctorId;
                                                var toDelDepId = dpGroup.DoctorDuties.FirstOrDefault().DepartmentId;
                                                var toDelUnitId = dpGroup.DoctorDuties.FirstOrDefault().UnitId;
                                                var toDelDoctorName = dpGroup.DoctorDuties.FirstOrDefault().DoctorInfo.DoctorName;
                                                <button type="button" class="btn btn-outline-danger" onclick="DrDutyTableRowDeleteClick('@toDelDrId', '@toDelDepId', '@toDelUnitId', '@($"Are You Sure To Delete Duties Of Dr {toDelDoctorName}")')">
                                                    <i class="fa fa-trash-alt"></i>
                                                </button>
                                            }
                                            @*<a asp-action="DoctorDutyDetails" class="btn btn-info" asp-route-doctorId="@dpGroup.DoctorId"
                                                   asp-route-departmentId="@dpGroup.DoctorDuties.FirstOrDefault().DepartmentId"
                                                   asp-route-unitId="@dpGroup.DoctorDuties.FirstOrDefault().UnitId">
                                                    <i class="fa fa-ellipsis-h"></i>
                                                </a>*@
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <div class="">
                        <div class="my-2" style="text-align:center; text-decoration:underline;">
                            <h3 class="text-center">No Doctor Duty Data Yet!</h3>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@if ((await authorizationService.AuthorizeAsync(User, "DoctorDutyDelete")).Succeeded)
{
    <div class="modal fade" id="drDutyDeleteModal" tabindex="-1" role="dialog" aria-labelledby="DeleteConfirmModal" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document" style="min-width:300px;">
            <div class="modal-content">
                <div class="modal-header justify-content-center">
                    <h5 class="modal-title" id="exampleModalLongTitle"><i class="fa fa-times-circle" style="font-size:80px; color:red;"></i></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body d-flex justify-content-center">
                    <div style="font-size:16px; color:red;"><b id="deleteConfirmWarningText"></b></div>
                </div>
                <div class="modal-footer d-flex" style="justify-content:space-evenly;">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>

                    <form method="post" asp-action="DoctorDuty" asp-controller="DoctorDuty" asp-area="Administration">
                        <input hidden name="toDelDrId" id="txtToDeleteDrId" />
                        <input hidden name="toDelDeptId" id="txtToDeleteDeptId" />
                        <input hidden name="toDelUnitId" id="txtToDeleteUnitId" />
                        <button type="submit" name="btnSubmit" value="Delete" class="btn btn-danger">Delete</button>
                    </form>

                    @*@if ((await authorizationService.AuthorizeAsync(User, "RoleDelete")).Succeeded)
                        {
                            <form method="post" asp-action="DeleteRole" asp-controller="Role" asp-area="Administration">
                                <button id="btnDeleteConfirm" onclick="DeleteConfirm(this, 'Administration/Role/DeleteRole', 'roleId')" deleteRecordId type="button" class="btn btn-danger">Delete</button>
                            </form>
                        }*@
                </div>
            </div>
        </div>
    </div>
}

@section Scripts{
    <!-- Counter js  -->
    <script src="~/plugins/waypoints/jquery.waypoints.min.js"></script>
    <script src="~/plugins/counterup/jquery.counterup.min.js"></script>


    <!--FooTable-->
    <script src="~/plugins/footable/js/footable.all.min.js"></script>

    <!--FooTable Example-->
    <script src="~/pages/jquery.footable.js"></script>

    <script src="~/js/DoctorDuty.js"></script>
    <script>
        function DrDutyEditClick(data) {

            $(".field-validation-error, .field-validation-valid, .validation-summary-errors, .validation-summary-valid").empty();
            $(".btnSaveSubmitToggle").hide();
            $(".btnUpdateSubmitToggle").show();

            var drId = data.doctorId;
            var drName = data.doctorName;
            var deptId = data.departmentId;
            var deptName = data.departmentName;
            var unitId = data.unitId;
            var unitName = data.unitName;

            SetDoctor(drId, drName);
            SetDepartment(deptId, deptName);
            $("#ddlDepartment").trigger("change");

            setTimeout(function () {
                SetUnit(unitId, unitName);
                $("#ddlUnit").trigger("change");
            }, 300);

            //$.each(data.drDutyInfo, function (key, value) {
            //    console.log(key + " - " + value.dutyDay);
            //});

            $(".drDutyAssignRow").each(function () {
                $(this).find("input.chkChoose").removeAttr("checked").prop("checked", false);
                $(this).find(".ToggleTimePickerGroup").hide();
                $(this).find("input.timePicker").val("");

                //var inputChk = $(this).find(".chkChoose").is(":checked");
                var dayOfDuty = $(this).find("input.dayOfDuty").val();
                var dutyTimes = $(data.drDutyInfo).toArray().filter(x => StringCompareFormat(x.dutyDay) == StringCompareFormat(dayOfDuty));
                var isDutyExist = dutyTimes.length > 0 ? true : false;

                if (isDutyExist) {
                    $(this).find("input.chkChoose").attr("checked", "checked").prop("checked", true);
                    $(this).find("input.timePicker.startTimeOne").val(dutyTimes[0].dutyStartTime1.trim());
                    $(this).find("input.timePicker.endTimeOne").val(dutyTimes[0].dutyEndTime1.trim());
                    $(this).find("input.timePicker.startTimeTwo").val(dutyTimes[0].dutyStartTime2.trim());
                    $(this).find("input.timePicker.endTimeTwo").val(dutyTimes[0].dutyEndTime2.trim());
                    $(this).find(".ToggleTimePickerGroup").show();
                }
            });

            //$.each(".drDutyAssignRow", function () {

            //});
        }

        function DrDutyTableRowDeleteClick(drId, deptId, unitId, deleteConfirmWarningText = "Are You Sure To Delete This Record?") {
            ResetDrDutyForm();

            $("#deleteConfirmWarningText").html(deleteConfirmWarningText);
            $("#txtToDeleteDrId").val(drId);
            $("#txtToDeleteDeptId").val(deptId);
            $("#txtToDeleteUnitId").val(unitId);

            $("#drDutyDeleteModal").modal('show');
        }

        function ResetDrDutyForm() {
            $("input.chkChoose").removeAttr("checked").prop("checked", false);
            ResetFormAndShowHideBtnSubmit("form#formDrDuty");
            $(".ddlTimeGap").val("5");
            $(".ToggleTimePickerGroup").hide();
            DrDeptUnitReset();
        }

        $(document).ready(function () {
            var successedActionName = "@ViewBag.SuccessedAlertMessage";
            successedActionName = successedActionName.trim();
            AlertSnackBarByActionName(successedActionName);

            $('.timePicker').mdtimepicker();

            ClickTimePickerRemoveButton();

            ClickCheckBoxToShowTimePicker();

            RemoveRdoTodayDr();

        });
    </script>
}

@*@if (Model.DisplaySubmitButton.ToLower().Trim() == "delete")
    {
        @section Scripts{
            <script src="~/js/DoctorDuty.js"></script>
            <script>
                $(document).ready(function () {
                    InitialCheckedRowShow();
                });
            </script>
        }
    }
    else
    {
        @section Scripts{
            <script src="~/js/DoctorDuty.js"></script>
            <script>
                $(document).ready(function () {

                    InitialCheckedRowShow();
                    $('.timePicker').mdtimepicker();

                    ClickTimePickerRemoveButton();

                    ClickCheckBoxToShowTimePicker();

                    RemoveRdoTodayDr();
                });
            </script>
        }
    }*@

